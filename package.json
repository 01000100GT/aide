{
  "publisher": "nicepkg",
  "name": "aide-pro",
  "displayName": "Aide",
  "description": "Master Any Code: One-Click Comments and Language Conversion. ðŸ’ª",
  "version": "1.10.0",
  "private": true,
  "packageManager": "pnpm@9.3.0",
  "author": "Nicepkg <2214962083@qq.com>",
  "license": "MIT",
  "funding": "https://github.com/sponsors/2214962083",
  "homepage": "https://github.com/nicepkg/aide#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/nicepkg/aide"
  },
  "bugs": {
    "url": "https://github.com/nicepkg/aide/issues"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/2214962083"
  },
  "keywords": [
    "prompt",
    "chatgpt",
    "copilot",
    "openai",
    "claude",
    "gemini",
    "llm",
    "ai",
    "gpt",
    "anthropic",
    "copy",
    "code",
    "annotation",
    "conversion",
    "multi-file",
    "ignore patterns",
    "keyboard shortcuts",
    "custom ai commands",
    "ai prompts",
    "code transformation",
    "code comments",
    "code readability",
    "code management",
    "developer tools",
    "vscode extension"
  ],
  "categories": [
    "AI",
    "Data Science",
    "Machine Learning",
    "Programming Languages",
    "Testing",
    "Linters",
    "Formatters",
    "Education"
  ],
  "main": "./dist/node/index.js",
  "icon": "res/icon.png",
  "files": [
    "dist"
  ],
  "engines": {
    "vscode": "^1.82.0"
  },
  "contributes": {
    "commands": [
      {
        "command": "aide.copyAsPrompt",
        "title": "%command.copyAsPrompt%"
      },
      {
        "command": "aide.askAI",
        "title": "%command.askAI%"
      },
      {
        "command": "aide.codeConvert",
        "title": "%command.codeConvert%",
        "icon": "$(notebook-open-as-text)"
      },
      {
        "command": "aide.codeViewerHelper",
        "title": "%command.codeViewerHelper%",
        "icon": "$(open-editors-view-icon)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "explorerResourceIsFolder || selectedFilesCount > 0 || resourceLangId",
          "command": "aide.copyAsPrompt",
          "group": "0_navigation@0"
        },
        {
          "when": "explorerResourceIsFolder || selectedFilesCount > 0 || resourceLangId",
          "command": "aide.askAI",
          "group": "0_navigation@1"
        }
      ],
      "editor/context": [
        {
          "command": "aide.codeViewerHelper",
          "group": "0_navigation@0"
        },
        {
          "command": "aide.codeConvert",
          "group": "0_navigation@1"
        }
      ],
      "editor/title": [
        {
          "command": "aide.codeViewerHelper",
          "group": "navigation@1"
        },
        {
          "command": "aide.codeConvert",
          "group": "navigation@2"
        }
      ]
    },
    "configuration": {
      "title": "%config.title%",
      "properties": {
        "aide.aiPrompt": {
          "type": "string",
          "default": "#{content}",
          "scope": "resource",
          "description": "%config.aiPrompt.description%"
        },
        "aide.aiCommand": {
          "type": "string",
          "default": "",
          "scope": "resource",
          "description": "%config.aiCommand.description%"
        },
        "aide.aiCommandCopyBeforeRun": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "%config.aiCommandCopyBeforeRun.description%"
        },
        "aide.respectGitIgnore": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "%config.respectGitIgnore.description%"
        },
        "aide.ignorePatterns": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/.git/**",
            "**/__pycache__/**",
            "**/.Python/**",
            "**/.DS_Store/**",
            "**/.cache/**",
            "**/.next/**",
            "**/.nuxt/**",
            "**/.out/**",
            "**/dist/**",
            "**/.serverless/**",
            "**/.parcel-cache/**"
          ],
          "scope": "resource",
          "description": "%config.ignorePatterns.description%"
        },
        "aide.convertLanguagePairs": {
          "type": "object",
          "default": {},
          "scope": "resource",
          "description": "%config.convertLanguagePairs.description%"
        },
        "aide.codeViewerHelperPrompt": {
          "type": "string",
          "default": "You are a programming language commentator.\nYou need to help me add comments to #{sourceLanguage} code as much as possible to make it readable for beginners.\nDo not change the original code, just add as detailed comments as possible,\nbecause my purpose is only to understand and read. Please use my native language #{locale} as the commenting language.\nPlease do not reply with any text other than the code, and do not use markdown syntax.\nHere is the code you need to comment on:\n\n#{content}",
          "scope": "resource",
          "description": "%config.codeViewerHelperPrompt.description%"
        },
        "aide.openaiKey": {
          "type": "string",
          "default": "",
          "description": "%config.openaiKey.description%"
        },
        "aide.openaiBaseUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "description": "%config.openaiBaseUrl.description%"
        },
        "aide.openaiModel": {
          "type": "string",
          "default": "gpt-4o",
          "description": "%config.openaiModel.description%"
        }
      }
    }
  },
  "scripts": {
    "copyFiles": "fse copy ./package.nls.en.json ./package.nls.json",
    "dev": "code --extensionDevelopmentPath=$PWD --disable-extensions &&pnpm run watch",
    "build": "tsc --noEmit &&pnpm run copyFiles &&tsup",
    "build:minify": "pnpm run build --minify",
    "build:pack": "pnpm run build:minify &&vsce package -o dist/aide.vsix --no-dependencies",
    "commit": "git add . && cz",
    "knip": "knip",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "publish": "esno ./scripts/publish.ts",
    "prepare": "husky",
    "test": "tsc --noEmit &&vitest --run",
    "watch": "pnpm run build --watch --sourcemap"
  },
  "devDependencies": {
    "@atao60/fse-cli": "^0.1.9",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@commitlint/cz-commitlint": "^19.2.0",
    "@ianvs/prettier-plugin-sort-imports": "^4.3.0",
    "@langchain/core": "0.2.15",
    "@langchain/openai": "^0.2.1",
    "@types/fs-extra": "^11.0.4",
    "@types/global-agent": "^2.1.3",
    "@types/node": "^20.14.10",
    "@types/shell-quote": "^1.7.5",
    "@types/vscode": "1.82.0",
    "@typescript-eslint/eslint-plugin": "^7.16.0",
    "@typescript-eslint/parser": "^7.16.0",
    "@vscode/vsce": "^2.29.0",
    "commitizen": "^4.3.0",
    "dotenv": "^16.4.5",
    "eslint": "^8.57.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^18.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-json": "^4.0.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-unused-imports": "^3.2.0",
    "esno": "^4.7.0",
    "execa": "^9.3.0",
    "fs-extra": "^11.2.0",
    "glob": "^10.4.3",
    "global-agent": "^3.0.0",
    "husky": "^9.0.11",
    "ignore": "^5.3.1",
    "inquirer": "^9.3.4",
    "knip": "^5.25.1",
    "langchain": "^0.2.9",
    "lint-staged": "^15.2.7",
    "minimatch": "^9.0.5",
    "pnpm": "^9.5.0",
    "prettier": "^3.3.2",
    "rimraf": "^6.0.1",
    "shell-quote": "^1.8.1",
    "tsup": "^8.1.0",
    "typescript": "5.4.5",
    "undici": "^6.19.2",
    "vite": "^5.3.3",
    "vitest": "^2.0.2"
  },
  "pnpm": {
    "overrides": {
      "@langchain/core": "0.2.15"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": "pnpm exec eslint"
  },
  "config": {
    "commitizen": {
      "path": "./cz-adapter.cjs"
    }
  }
}
